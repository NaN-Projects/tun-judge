#!groovy

properties properties: [
    disableConcurrentBuilds(),
    [
        $class: 'BuildDiscarderProperty',
        strategy: [
            $class: 'LogRotator',
            numToKeepStr: '10',
            daysToKeepStr: '7',
            artifactNumToKeepStr: '10',
            artifactDaysToKeepStr: '7'
        ]
    ]
]

final nodeDockerImage = "timbru31/node-alpine-git:12"

node("main") {
    def utils

    stage("Checkout") {
        checkout scm

        sh "git config user.email 'nasreddine.bacali95@gmail.com'"
        sh "git config user.name 'Nasreddine Bac Ali'"

        utils = load "jenkins/utils.groovy"
    }

    stage("Yarn Install") {
        utils.runInDocker(nodeDockerImage, "yarn install")
    }

    stage("Update version") {
        utils.runInDocker(nodeDockerImage, "yarn release")
    }

    def serverImage
    def judgeImage

    load "jenkins/build.groovy"

    def tags = utils.getReleaseTags(nodeDockerImage, env.BRANCH_NAME == 'main')
    println(serverImage)
    println(judgeImage)

    docker.withRegistry('', 'docker') {
        parallel(
            "Publish Server": {
                stage("Publish Server") {
                    tags.each { println(it) }
                }
            },
            "Publish Judge": {
                stage("Publish Judge") {
                    tags.each { println(it) }
                }
            }
        )
    }

    stage("Push changes") {
        sh "git push"
    }
}